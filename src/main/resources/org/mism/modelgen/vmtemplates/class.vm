package $type.packageName;

import org.mism.modelgen.api.*;
import java.beans.PropertyChangeSupport;
import ${type.typeName};
#foreach( $import in $type.imports )
import $import;
#end

public class $type.clzzName implements $type.simpleName, Clonable<$type.simpleName>, Mutable {

#foreach( $prop in $type.properties )
#if($prop.containedType)
    ContainedList<$type.simpleName,${prop.containedType}> $prop.nameCc = new ContainedList<$type.simpleName,${prop.containedType}>("${prop.name}", this);
#else
    $prop.declaration $prop.nameCc;
#end
#end

#if ($type.requiredCount > 0)
    public ${type.clzzName}(##
#foreach( $prop in $type.required )$prop.declaration _$prop.nameCc##
#if ($velocityCount < ${type.requiredCount}), ##
#end
#end) {
#foreach( $prop in $type.required )
       this.${prop.nameCc} = _${prop.nameCc};
#end
    }
#end
 
    public $type.clzzName () {}

#foreach ( $prop in $type.properties )

#parse("org/mism/modelgen/vmtemplates/class_setter.vm")


#parse("org/mism/modelgen/vmtemplates/class_getter.vm")

#end

#parse("org/mism/modelgen/vmtemplates/class_clone.vm")


#parse("org/mism/modelgen/vmtemplates/class_equals.vm")


#if($type.contained)
#parse("org/mism/modelgen/vmtemplates/class_containedimpl.vm")

#end

#parse("org/mism/modelgen/vmtemplates/class_mutable.vm")

}