package $model.package;

#foreach ($type in $model.types)
import ${model.package}.$type.clzzName;
#end

public class ModelFactory {

   private static ModelFactory instance;
   
   public static ModelFactory instance()
   {
      if (instance==null) return instance = new ModelFactory(); else return instance;
   }

   private ModelFactory() { };
   
#foreach ($type in $model.types)
#if ($type.contained)##
   public $type.simpleName add${type.simpleName}To${type.container.simpleName}( $type.container.simpleName _parent )
   {
      $type.simpleName n = new ${type.clzzName}();
      _parent.get${type.containmentName}().add(n);
      return n;
   }
   
#else
   public $type.simpleName create${type.simpleName}(##
#foreach ($prop in $type.required) $prop.type _$prop.nameCc ##
#end##
) {
      return new ${type.clzzName}(#foreach ($prop in $type.required) _$prop.nameCc #end);
   }
   
#end   
#end
}